apiVersion: v1
kind: ConfigMap
metadata:
  name: node-red-flows
  namespace: homa
data:
  flows.json: |
    [
        {
            "id": "42f89ad2e677edb7",
            "type": "tab",
            "label": "IPMI",
            "disabled": false,
            "info": ""
        },
        {
            "id": "f6c4f1593226a2c3",
            "type": "tab",
            "label": "TestFlows",
            "disabled": false,
            "info": "",
            "env": []
        },
        {
            "id": "8cdf5814effa408c",
            "type": "tab",
            "label": "Redfish",
            "disabled": false,
            "info": "",
            "env": []
        },
        {
            "id": "57fa17962ce04fe7",
            "type": "tls-config",
            "name": "",
            "cert": "",
            "key": "",
            "ca": "",
            "certname": "",
            "keyname": "",
            "caname": "",
            "servername": "",
            "verifyservercert": false,
            "alpnprotocol": ""
        },
        {
            "id": "5e3132858f7267d9",
            "type": "switch",
            "z": "42f89ad2e677edb7",
            "name": "",
            "property": "req.body.version",
            "propertyType": "msg",
            "rules": [
                {
                    "t": "eq",
                    "v": "1.5",
                    "vt": "str"
                },
                {
                    "t": "eq",
                    "v": "2.0",
                    "vt": "str"
                }
            ],
            "checkall": "true",
            "repair": false,
            "outputs": 2,
            "x": 310,
            "y": 120,
            "wires": [
                [
                    "464a88845cacab83"
                ],
                [
                    "e52b867d0dfc6f6d"
                ]
            ]
        },
        {
            "id": "cd87bd2661a492b8",
            "type": "http in",
            "z": "42f89ad2e677edb7",
            "name": "",
            "url": "/ipmi",
            "method": "post",
            "upload": false,
            "swaggerDoc": "",
            "x": 160,
            "y": 120,
            "wires": [
                [
                    "5e3132858f7267d9"
                ]
            ]
        },
        {
            "id": "734c5e396d35f230",
            "type": "switch",
            "z": "42f89ad2e677edb7",
            "name": "",
            "property": "req.body.option",
            "propertyType": "msg",
            "rules": [
                {
                    "t": "eq",
                    "v": "fru",
                    "vt": "str"
                },
                {
                    "t": "eq",
                    "v": "power",
                    "vt": "str"
                },
                {
                    "t": "eq",
                    "v": "pxe",
                    "vt": "str"
                },
                {
                    "t": "eq",
                    "v": "consumption",
                    "vt": "str"
                }
            ],
            "checkall": "true",
            "repair": false,
            "outputs": 4,
            "x": 630,
            "y": 120,
            "wires": [
                [
                    "34af57e446a12ac4"
                ],
                [
                    "bd22d2aabe18d405"
                ],
                [
                    "32960a042e94b662"
                ],
                [
                    "8a51b7cbaf372f7d"
                ]
            ]
        },
        {
            "id": "34af57e446a12ac4",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "fru",
            "func": "msg.payload[\"additon_cmd\"] = \" fru print 0\";\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 810,
            "y": 60,
            "wires": [
                [
                    "900fd7e5cd2f708f"
                ]
            ]
        },
        {
            "id": "bd22d2aabe18d405",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "power",
            "func": "var actionCode = msg.payload[\"actionCode\"];\nmsg.payload[\"additon_cmd\"] = \" power \" + actionCode;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 810,
            "y": 100,
            "wires": [
                [
                    "900fd7e5cd2f708f"
                ]
            ]
        },
        {
            "id": "32960a042e94b662",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "pxe",
            "func": "msg.payload[\"additon_cmd\"] = \" chassis bootdev pxe\";\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 810,
            "y": 140,
            "wires": [
                [
                    "900fd7e5cd2f708f"
                ]
            ]
        },
        {
            "id": "8a51b7cbaf372f7d",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "consum",
            "func": "msg.payload[\"additon_cmd\"] = ' sdr elist | grep \"Pwr Consumption\"';\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 820,
            "y": 180,
            "wires": [
                [
                    "900fd7e5cd2f708f"
                ]
            ]
        },
        {
            "id": "900fd7e5cd2f708f",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "cmd extra input",
            "func": "params = msg.req.body;\naddress = params[\"address\"];\nuser = params[\"user\"];\npassword = params[\"password\"];\ninf = params[\"inf\"];\nadditon_cmd = params[\"additon_cmd\"];\n\ncmd = \"-I \" + inf + \" -H \" + address + \" -U \" + user + \" -P \" + password + additon_cmd;\nmsg.payload = cmd;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 1060,
            "y": 120,
            "wires": [
                [
                    "2548ceb7c7c6b647",
                    "8ad07339ec7367f1"
                ]
            ]
        },
        {
            "id": "2548ceb7c7c6b647",
            "type": "exec",
            "z": "42f89ad2e677edb7",
            "command": "ipmitool",
            "addpay": "payload",
            "append": "",
            "useSpawn": "false",
            "timer": "5",
            "winHide": true,
            "oldrc": false,
            "name": "exec cmd",
            "x": 540,
            "y": 360,
            "wires": [
                [
                    "dacf656f6939f37b"
                ],
                [
                    "cc3a5171eac06706"
                ],
                [
                    "76ce4ff143ece18f"
                ]
            ]
        },
        {
            "id": "dd42f8809db67f7c",
            "type": "http response",
            "z": "42f89ad2e677edb7",
            "name": "",
            "statusCode": "",
            "headers": {},
            "x": 1010,
            "y": 360,
            "wires": []
        },
        {
            "id": "41e2eda8b1400a54",
            "type": "join",
            "z": "42f89ad2e677edb7",
            "name": "",
            "mode": "custom",
            "build": "merged",
            "property": "payload",
            "propertyType": "msg",
            "key": "key",
            "joiner": "\\n",
            "joinerType": "str",
            "accumulate": false,
            "timeout": "3",
            "count": "2",
            "reduceRight": false,
            "reduceExp": "",
            "reduceInit": "",
            "reduceInitType": "num",
            "reduceFixup": "",
            "x": 870,
            "y": 360,
            "wires": [
                [
                    "dd42f8809db67f7c"
                ]
            ]
        },
        {
            "id": "dacf656f6939f37b",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "stdout",
            "func": "var res = msg.payload;\nmsg.payload = {};\nmsg.payload[\"data\"] = res;\nreturn msg;\n",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 690,
            "y": 320,
            "wires": [
                [
                    "41e2eda8b1400a54"
                ]
            ]
        },
        {
            "id": "cc3a5171eac06706",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "stderr",
            "func": "var res = msg.payload;\nmsg.payload = {};\nmsg.payload[\"error\"] = res;\nreturn msg;\n",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 690,
            "y": 360,
            "wires": [
                [
                    "41e2eda8b1400a54"
                ]
            ]
        },
        {
            "id": "76ce4ff143ece18f",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "stdcode",
            "func": "\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 700,
            "y": 400,
            "wires": [
                [
                    "41e2eda8b1400a54"
                ]
            ]
        },
        {
            "id": "e52b867d0dfc6f6d",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "version2.0",
            "func": "msg.payload[\"inf\"] = \"lanplus\";\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 470,
            "y": 140,
            "wires": [
                [
                    "734c5e396d35f230"
                ]
            ]
        },
        {
            "id": "464a88845cacab83",
            "type": "function",
            "z": "42f89ad2e677edb7",
            "name": "version1.5",
            "func": "msg.payload[\"inf\"] = \"lan\";\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 470,
            "y": 100,
            "wires": [
                [
                    "734c5e396d35f230"
                ]
            ]
        },
        {
            "id": "8ad07339ec7367f1",
            "type": "debug",
            "z": "42f89ad2e677edb7",
            "name": "",
            "active": true,
            "tosidebar": true,
            "console": false,
            "tostatus": false,
            "complete": "payload",
            "targetType": "msg",
            "statusVal": "",
            "statusType": "auto",
            "x": 1270,
            "y": 120,
            "wires": []
        },
        {
            "id": "e68097d99a0b7923",
            "type": "exec",
            "z": "f6c4f1593226a2c3",
            "command": "ipmitool",
            "addpay": "payload",
            "append": "",
            "useSpawn": "false",
            "timer": "5",
            "winHide": true,
            "oldrc": false,
            "name": "exec cmd",
            "x": 720,
            "y": 260,
            "wires": [
                [
                    "c0fee96b9b81e8f2"
                ],
                [
                    "c0fee96b9b81e8f2"
                ],
                [
                    "c0fee96b9b81e8f2"
                ]
            ]
        },
        {
            "id": "6dfd2b4d6da46962",
            "type": "http response",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "statusCode": "",
            "headers": {},
            "x": 1230,
            "y": 260,
            "wires": []
        },
        {
            "id": "c0fee96b9b81e8f2",
            "type": "join",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "mode": "custom",
            "build": "array",
            "property": "payload",
            "propertyType": "msg",
            "key": "m",
            "joiner": "\\n",
            "joinerType": "str",
            "accumulate": false,
            "timeout": "5",
            "count": "5",
            "reduceRight": false,
            "reduceExp": "",
            "reduceInit": "",
            "reduceInitType": "num",
            "reduceFixup": "",
            "x": 870,
            "y": 260,
            "wires": [
                [
                    "85d1b1bed86add08"
                ]
            ]
        },
        {
            "id": "85d1b1bed86add08",
            "type": "function",
            "z": "f6c4f1593226a2c3",
            "name": "Packaging output",
            "func": "res = msg.payload;\nmsg.payload = {};\nvar code = 0, data = \"\";\nfor (var i = 0; i < res.length; i ++) {  //遍历数组\n    if (typeof res[i] == \"object\")\n        code = res[i][\"code\"];\n    else data = res[i];\n}\nmsg.payload[\"data\"] = data;\nmsg.payload[\"code\"] = code;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 1050,
            "y": 260,
            "wires": [
                [
                    "6dfd2b4d6da46962"
                ]
            ]
        },
        {
            "id": "3b4381c1b5fc7871",
            "type": "function",
            "z": "f6c4f1593226a2c3",
            "name": "cmd extra input",
            "func": "params = msg.req.body;\naddress = params[\"address\"];\nuser = params[\"user\"];\npassword = params[\"password\"];\n\ntry {\n    var actionCode = params[\"actionCode\"];\n}\ncatch(err) {\n    actionCode = \"do nothing\";\n}\n\nvar inf = \"\";\nvar version = params[\"version\"];\nswitch (true) {\n    case version == \"1.5\":\n        inf=\" lan\";\n        break;\n    case version == \"2.0\":\n        inf=\" lanplus\";\n        break;\n}\n\nvar additon_cmd = \"\";\nvar option = params[\"option\"];\nswitch (true) {\n    case option == \"fru\":\n        additon_cmd=\" fru print 0\";\n        break;\n    case option == \"power\":\n        additon_cmd=\" power \" + actionCode;\n        break;\n    case option == \"pxe\":\n        additon_cmd=\" chassis bootdev pxe\";\n        break;\n    case option == \"consumption\":\n        additon_cmd=' sdr elist | grep \"Pwr Consumption\"';\n        break;\n}\n\ncmd = \" -I\" + inf + \" -H \" + address + \" -U \" + user + \" -P \" + password + additon_cmd;\n\nmsg.payload = cmd;\n\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 540,
            "y": 260,
            "wires": [
                [
                    "e68097d99a0b7923"
                ]
            ]
        },
        {
            "id": "b64e200df7e53340",
            "type": "http in",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "url": "/ipmiOld",
            "method": "post",
            "upload": false,
            "swaggerDoc": "",
            "x": 350,
            "y": 260,
            "wires": [
                [
                    "3b4381c1b5fc7871"
                ]
            ]
        },
        {
            "id": "5efb5e33801f52b6",
            "type": "exec",
            "z": "f6c4f1593226a2c3",
            "command": "ipmitool",
            "addpay": "payload",
            "append": "",
            "useSpawn": "false",
            "timer": "5",
            "winHide": true,
            "oldrc": false,
            "name": "exec cmd",
            "x": 720,
            "y": 400,
            "wires": [
                [
                    "e46754816ea03cb6"
                ],
                [
                    "e46754816ea03cb6"
                ],
                [
                    "e46754816ea03cb6"
                ]
            ]
        },
        {
            "id": "480e5163a1312135",
            "type": "http response",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "statusCode": "",
            "headers": {},
            "x": 1230,
            "y": 400,
            "wires": []
        },
        {
            "id": "e46754816ea03cb6",
            "type": "join",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "mode": "custom",
            "build": "array",
            "property": "payload",
            "propertyType": "msg",
            "key": "m",
            "joiner": "\\n",
            "joinerType": "str",
            "accumulate": false,
            "timeout": "5",
            "count": "5",
            "reduceRight": false,
            "reduceExp": "",
            "reduceInit": "",
            "reduceInitType": "num",
            "reduceFixup": "",
            "x": 870,
            "y": 400,
            "wires": [
                [
                    "b0549f53653b310d"
                ]
            ]
        },
        {
            "id": "b0549f53653b310d",
            "type": "function",
            "z": "f6c4f1593226a2c3",
            "name": "Packaging output",
            "func": "res = msg.payload;\nmsg.payload = {};\nvar code = 0, data = \"\";\nfor (var i = 0; i < res.length; i ++) {  //遍历数组\n    if (typeof res[i] == \"object\")\n        code = res[i][\"code\"];\n    else data = res[i];\n}\nmsg.payload[\"data\"] = data;\nmsg.payload[\"code\"] = code;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 1050,
            "y": 400,
            "wires": [
                [
                    "480e5163a1312135"
                ]
            ]
        },
        {
            "id": "283aae39b00f13df",
            "type": "function",
            "z": "f6c4f1593226a2c3",
            "name": "cmd extra input",
            "func": "params = msg.req.body;\naddress = params[\"address\"];\nuser = params[\"user\"];\npassword = params[\"password\"];\n\ntry {\n    var actionCode = params[\"actionCode\"];\n}\ncatch(err) {\n    actionCode = \"do nothing\";\n}\n\nvar inf = \"\";\nvar version = params[\"version\"];\nswitch (true) {\n    case version == \"1.5\":\n        inf=\" lan\";\n        break;\n    case version == \"2.0\":\n        inf=\" lanplus\";\n        break;\n}\n\nvar additon_cmd = \"\";\nvar option = params[\"option\"];\nswitch (true) {\n    case option == \"fru\":\n        additon_cmd=\" fru print 0\";\n        break;\n    case option == \"power\":\n        additon_cmd=\" power \" + actionCode;\n        break;\n    case option == \"pxe\":\n        additon_cmd=\" chassis bootdev pxe\";\n        break;\n    case option == \"consumption\":\n        additon_cmd=' sdr elist | grep \"Pwr Consumption\"';\n        break;\n}\n\ncmd = \" -I\" + inf + \" -H \" + address + \" -U \" + user + \" -P \" + password + additon_cmd;\n\nmsg.payload = cmd;\n\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 540,
            "y": 400,
            "wires": [
                [
                    "5efb5e33801f52b6"
                ]
            ]
        },
        {
            "id": "558021c191d6a25d",
            "type": "http in",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "url": "/ipmitest",
            "method": "post",
            "upload": false,
            "swaggerDoc": "",
            "x": 350,
            "y": 400,
            "wires": [
                [
                    "283aae39b00f13df"
                ]
            ]
        },
        {
            "id": "ae4cb4b1c3a16fbe",
            "type": "http in",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "url": "/ping",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 340,
            "y": 120,
            "wires": [
                [
                    "edc942ceb7a2006a"
                ]
            ]
        },
        {
            "id": "edc942ceb7a2006a",
            "type": "http response",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "statusCode": "200",
            "headers": {},
            "x": 1220,
            "y": 120,
            "wires": []
        },
        {
            "id": "6964ee3ce0085074",
            "type": "comment",
            "z": "f6c4f1593226a2c3",
            "name": "readinessProbe",
            "info": "# readinessProbe",
            "x": 180,
            "y": 120,
            "wires": []
        },
        {
            "id": "06efa69c72fc8f8a",
            "type": "exec",
            "z": "f6c4f1593226a2c3",
            "command": "apk add ipmitool",
            "addpay": "",
            "append": "",
            "useSpawn": "false",
            "timer": "",
            "winHide": false,
            "oldrc": false,
            "name": "",
            "x": 580,
            "y": 560,
            "wires": [
                [
                    "1cc80fdb7636cc11"
                ],
                [
                    "1cc80fdb7636cc11"
                ],
                [
                    "1cc80fdb7636cc11"
                ]
            ]
        },
        {
            "id": "d6b06807624175c1",
            "type": "http in",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "url": "/apk",
            "method": "post",
            "upload": false,
            "swaggerDoc": "",
            "x": 340,
            "y": 560,
            "wires": [
                [
                    "06efa69c72fc8f8a"
                ]
            ]
        },
        {
            "id": "32d06b56963ee919",
            "type": "http response",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "statusCode": "",
            "headers": {},
            "x": 1250,
            "y": 560,
            "wires": []
        },
        {
            "id": "1cc80fdb7636cc11",
            "type": "join",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "mode": "custom",
            "build": "array",
            "property": "payload",
            "propertyType": "msg",
            "key": "m",
            "joiner": "\\n",
            "joinerType": "str",
            "accumulate": false,
            "timeout": "3",
            "count": "3",
            "reduceRight": false,
            "reduceExp": "",
            "reduceInit": "",
            "reduceInitType": "num",
            "reduceFixup": "",
            "x": 830,
            "y": 560,
            "wires": [
                [
                    "632fd282ae1cf7eb"
                ]
            ]
        },
        {
            "id": "632fd282ae1cf7eb",
            "type": "function",
            "z": "f6c4f1593226a2c3",
            "name": "",
            "func": "res = msg.payload;\nmsg.payload = {};\nvar code = 0, data = \"\";\nfor (var i = 0; i < res.length; i ++) {  //遍历数组\n    if (typeof res[i] == \"object\")\n        code = res[i][\"code\"];\n    else data = res[i];\n}\nmsg.payload[\"data\"] = data;\nmsg.payload[\"code\"] = code;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 1040,
            "y": 560,
            "wires": [
                [
                    "32d06b56963ee919"
                ]
            ]
        },
        {
            "id": "4e6bd7f5cf7b30d0",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 410,
            "y": 60,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "b47db06ec2cd144a",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/SessionService",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 470,
            "y": 100,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "04ad3078d7b4ce29",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "session服务",
            "info": "",
            "x": 230,
            "y": 100,
            "wires": []
        },
        {
            "id": "50eaeeedaefba56f",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "redfish版本查看",
            "info": "",
            "x": 220,
            "y": 60,
            "wires": []
        },
        {
            "id": "d8ec20280853f842",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "CPU列表/明细",
            "info": "",
            "x": 230,
            "y": 260,
            "wires": []
        },
        {
            "id": "f5d4740ea445bb75",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/Sessions",
            "method": "post",
            "upload": false,
            "swaggerDoc": "",
            "x": 450,
            "y": 140,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "3cb5d808b2c2b087",
            "type": "http request",
            "z": "8cdf5814effa408c",
            "name": "forward",
            "method": "use",
            "ret": "txt",
            "paytoqs": "ignore",
            "url": "",
            "tls": "57fa17962ce04fe7",
            "persist": false,
            "proxy": "",
            "authType": "",
            "senderr": false,
            "x": 1180,
            "y": 200,
            "wires": [
                [
                    "4eccfe1c7bf04e20",
                    "d6f0517fd2a7e8f5"
                ]
            ]
        },
        {
            "id": "7cbc464e085d4cd6",
            "type": "http response",
            "z": "8cdf5814effa408c",
            "name": "",
            "statusCode": "",
            "headers": {},
            "x": 1570,
            "y": 200,
            "wires": []
        },
        {
            "id": "7735fe521e303f6b",
            "type": "function",
            "z": "8cdf5814effa408c",
            "name": "Change Variable",
            "func": "\n\nString.prototype.format = function () {\n    if (arguments.length == 0) return this;\n    var param = arguments[0];\n    var s = this;\n    if (typeof (param) == 'object') {\n        for (var key in param)\n            s = s.replace(new RegExp(\"\\\\{\" + key + \"\\\\}\", \"g\"), param[key]);\n        return s;\n    } else {\n        for (var i = 0; i < arguments.length; i++)\n            s = s.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), arguments[i]);\n        return s;\n    }\n};\n\n\nvar vars_all = {\n    chassis_id: msg.req.query[\"chassis_id\"] || \"\",\n    board_id: msg.req.query[\"board_id\"] || \"\",\n    drive_id: msg.req.query[\"drive_id\"] || \"\",\n    networkadapter_id: msg.req.query[\"networkadapter_id\"] || \"\",\n    pciedevices_id: msg.req.query[\"pciedevices_id\"] || \"\",\n    function_id: msg.req.query[\"function_id\"] || \"\",\n    system_id: msg.req.query[\"system_id\"] || \"\",\n    cpu_id: msg.req.query[\"cpu_id\"] || \"\",\n    memory_id: encodeURIComponent(msg.req.query[\"memory_id\"] || \"\"),\n    networkadapter_id: msg.req.query[\"networkadapter_id\"] || \"\",\n    raid_id: msg.req.query[\"raid_id\"] || \"\",\n    volume_id: msg.req.query[\"volume_id\"] || \"\",\n    logservice_id: msg.req.query[\"logservice_id\"] || \"\",\n    entry_id: msg.req.query[\"entry_id\"] || \"\",\n    manager_id: msg.req.query[\"manager_id\"] || \"\",\n    networkinterface_id: encodeURIComponent(msg.req.query[\"networkinterface_id\"] || \"\"),\n    serialinterface_id: msg.req.query[\"serialinterface_id\"] || \"\",\n    registries_id: msg.req.query[\"registries_id\"] || \"\",\n    user_id: msg.req.query[\"user_id\"] || \"\",\n    role_id: msg.req.query[\"role_id\"] || \"\",\n    session_id: msg.req.query[\"session_id\"] || \"\",\n    task_id: msg.req.query[\"task_id\"] || \"\",\n};\n\npath_mapping = {\n    \"/redfish\": \"/redfish\",\n    \"/redfish/v1/Chassis\": \"/redfish/v1/Chassis/{chassis_id}\", // 查询设备的机箱资源信息\n    \"/redfish/v1/Chassis/Thermal\": \"/redfish/v1/Chassis/{chassis_id}/Thermal\", // 查询指定服务器机箱的温度和风扇传感器信息,\n    \"/redfish/v1/Chassis/Power\": \"/redfish/v1/Chassis/{chassis_id}/Power\", // 查询电源信息\n    \"/redfish/v1/Chassis/Boards\": \"/redfish/v1/Chassis/{chassis_id}/Boards/{board_id}\", // 查询扩展卡信息\n    \"/redfish/v1/Chassis/Drives\": \"/redfish/v1/Chassis/{chassis_id}/Drives/{drive_id}\", // 查询指定的物理盘信息\n    \"/redfish/v1/Chassis/NetworkAdapters\": \"/redfish/v1/Chassis/{chassis_id}/NetworkAdapters/{networkadapter_id}\", // 查询指定的网络适配器资源信息\n    \"/redfish/v1/Chassis/PCIeDevices\": \"/redfish/v1/Chassis/{chassis_id}/PCIeDevices/{pciedevices_id}\", // 查询指定的 PCIE 卡设备信息\n    \"/redfish/v1/Chassis/PCIeDevices/Functions\": \"/redfish/v1/Chassis/{chassis_id}/PCIeDevices/{pciedevices_id}/Functions/{function_id}\", // 查询指定的 PCIE 卡功能信息\n    \"/redfish/v1/Systems\": \"/redfish/v1/Systems/{system_id}\", // 查询指定系统资源信息\n    \"/redfish/v1/Systems/Processors\": \"/redfish/v1/Systems/{system_id}/Processors/{cpu_id}\", // 查询指定CPU信息\n    \"/redfish/v1/Systems/Memory\": \"/redfish/v1/Systems/{system_id}/Memory/{memory_id}\", // 查询指定内存信息\n    \"/redfish/v1/Systems/NetworkAdapters\": \"/redfish/v1/Systems/{system_id}/NetworkAdapters/{networkadapter_id}\", // 查询指定网络适配器信息\n    \"/redfish/v1/Systems/Storage\": \"/redfish/v1/Systems/{system_id}/Storage/{raid_id}\", // 查询指定的 RAID 卡信息\n    \"/redfish/v1/Systems/Storage/Drives\": \"/redfish/v1/Systems/{system_id}/Storage/Drives/{drive_id}\", // 查询指定磁盘信息(貌似是dell服务器特有)\n    \"/redfish/v1/Systems/Storages/volume\": \"/redfish/v1/Systems/{system_id}/Storages/{raid_id}/Volumes/{volume_id}\", // 删除逻辑盘信息\n    \"/redfish/v1/Systems/LogServices\": \"/redfish/v1/Systems/{system_id}/LogServices/{logservice_id}\", // 查询指定事件日志服务集合资源信息\n    \"/redfish/v1/Systems/LogServices/Entries\": \"/redfish/v1/Systems/{system_id}/LogServices/{logservice_id}/Entries/{entry_id}\", // 查询事件日志资源信息\n    \"/redfish/v1/Managers\": \"/redfish/v1/Managers/{manager_id}\", // 查询服务器指定管理资源信息\n    \"/redfish/v1/Managers/EthernetInterfaces\": \"/redfish/v1/Managers/{manager_id}/EthernetInterfaces/{networkinterface_id}\", // 查询指定网口信息\n    \"/redfish/v1/Managers/SerialInterfaces\": \"/redfish/v1/Managers/{manager_id}/SerialInterfaces/{serialinterface_id}\", // 查询指定串口信息\n    \"/redfish/v1/Registries\": \"/redfish/v1/Registries/{registries_id}\", // 查询服务器当前具体的消息归档文件资源\n    \"/redfish/v1/AccountService/Accounts\":\"/redfish/v1/redfish/v1/AccountService/Accounts/{user_id}\", // 查询指定用户信息\n    \"/redfish/v1/AccountService/Roles\":\"/redfish/v1/AccountService/Roles/{role_id}\", // 查询指定角色信息\n    \"/redfish/v1/Sessions\": \"/redfish/v1/Sessions\",\n    \"/redfish/v1/SessionService\": \"/redfish/v1/SessionService\",\n    \"/redfish/v1/SessionService/Sessions\":\"/redfish/v1/SessionService/Sessions/{session_id}\", // 查询服务器当前指定会话资源信息\n    \"/redfish/v1/TaskService/Tasks\": \"/redfish/v1/TaskService/Tasks/{task_id}\" // 查询服务器指定任务资源的信息\n};\n\nvar address = msg.req.query[\"address\"];\nvar path_key = msg.req.path;\nvar path_str = path_mapping[path_key];\nvar path_real = path_str.format(vars_all);\nmsg.url = \"https://\" + address + path_real;\n\nmsg.method = msg.req.method;\n\nvar user = msg.req.body[\"UserName\"];\nif(user == \"\" || typeof(user) ==\"undefined\" ) {\n  msg.headers = msg.req.headers;\n}\n\nmsg.payload[\"X-Auth-Token\"]=\"\"\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 1000,
            "y": 200,
            "wires": [
                [
                    "3cb5d808b2c2b087",
                    "b40d94c00c303a35"
                ]
            ]
        },
        {
            "id": "cd5dabfe620eeb69",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "低版本获取token",
            "info": "",
            "x": 220,
            "y": 140,
            "wires": []
        },
        {
            "id": "1f5507dc9173b108",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/Sessions",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 450,
            "y": 180,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "6594d8c969a26df1",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "查询session集合",
            "info": "",
            "x": 220,
            "y": 180,
            "wires": []
        },
        {
            "id": "4eccfe1c7bf04e20",
            "type": "debug",
            "z": "8cdf5814effa408c",
            "name": "",
            "active": true,
            "tosidebar": true,
            "console": false,
            "tostatus": false,
            "complete": "payload",
            "targetType": "msg",
            "statusVal": "",
            "statusType": "auto",
            "x": 1230,
            "y": 320,
            "wires": []
        },
        {
            "id": "d6f0517fd2a7e8f5",
            "type": "function",
            "z": "8cdf5814effa408c",
            "name": "Set Token",
            "func": "token = msg.headers[\"x-auth-token\"];\nmsg.headers[\"X-Auth-Token\"] = token;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 1360,
            "y": 200,
            "wires": [
                [
                    "7cbc464e085d4cd6",
                    "bad2656d5e79ba33",
                    "b8ee6503905dc08c"
                ]
            ]
        },
        {
            "id": "bad2656d5e79ba33",
            "type": "debug",
            "z": "8cdf5814effa408c",
            "name": "",
            "active": true,
            "tosidebar": true,
            "console": false,
            "tostatus": false,
            "complete": "payload",
            "targetType": "msg",
            "statusVal": "",
            "statusType": "auto",
            "x": 1522.8958740234375,
            "y": 116.88888549804688,
            "wires": []
        },
        {
            "id": "b8ee6503905dc08c",
            "type": "debug",
            "z": "8cdf5814effa408c",
            "name": "",
            "active": true,
            "tosidebar": true,
            "console": false,
            "tostatus": false,
            "complete": "headers",
            "targetType": "msg",
            "statusVal": "",
            "statusType": "auto",
            "x": 1470,
            "y": 320,
            "wires": []
        },
        {
            "id": "0b1539cc3c69f98e",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "查询系统内的机箱集合资源信息",
            "info": "查询系统内的机箱集合资源信息",
            "x": 170,
            "y": 220,
            "wires": []
        },
        {
            "id": "b40d94c00c303a35",
            "type": "debug",
            "z": "8cdf5814effa408c",
            "name": "",
            "active": true,
            "tosidebar": true,
            "console": false,
            "tostatus": false,
            "complete": "url",
            "targetType": "msg",
            "statusVal": "",
            "statusType": "auto",
            "x": 1180,
            "y": 80,
            "wires": []
        },
        {
            "id": "302dd7a446cc0e58",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/chassis",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 440,
            "y": 220,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "7bb2aa68c63f98b3",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/Systems/Processors",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 480,
            "y": 260,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "ebf249e2af10e934",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/Systems/Memory",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 470,
            "y": 300,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "ab740f4036f8b532",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "Memory列表/明细",
            "info": "",
            "x": 220,
            "y": 300,
            "wires": []
        },
        {
            "id": "8702bebfc255ce93",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/Systems/NetworkAdapters",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 500,
            "y": 340,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "d5c280dae560df1e",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "网络适配器列表/明细",
            "info": "",
            "x": 210,
            "y": 340,
            "wires": []
        },
        {
            "id": "0f73d9f27a4468cd",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/Systems/Storage",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 470,
            "y": 380,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "cfbf9cc57b9cf134",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "RAID卡列表/明细",
            "info": "",
            "x": 220,
            "y": 380,
            "wires": []
        },
        {
            "id": "88c017c833bcf741",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/Systems/Storage/Drives",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 490,
            "y": 420,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "237351dc7ef5dbe4",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "Disk明细 (maybe for Dell)",
            "info": "",
            "x": 190,
            "y": 420,
            "wires": []
        },
        {
            "id": "8885b2a4c6d738c3",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/Managers/EthernetInterfaces",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 510,
            "y": 500,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "d6490407d2e01b79",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "以太网卡列表/明细",
            "info": "",
            "x": 210,
            "y": 500,
            "wires": []
        },
        {
            "id": "7227d98eebc9ffee",
            "type": "http in",
            "z": "8cdf5814effa408c",
            "name": "",
            "url": "/redfish/v1/Managers",
            "method": "get",
            "upload": false,
            "swaggerDoc": "",
            "x": 450,
            "y": 460,
            "wires": [
                [
                    "7735fe521e303f6b"
                ]
            ]
        },
        {
            "id": "2cc3242848b4149b",
            "type": "comment",
            "z": "8cdf5814effa408c",
            "name": "管理资源信息",
            "info": "",
            "x": 230,
            "y": 460,
            "wires": []
        }
    ]
