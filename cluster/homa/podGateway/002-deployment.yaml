---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cassandra-rackdc
data:
  cassandra-rackdc.properties: |
    dc= datacenter
    rack= RACK

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: wg-al
  labels:
    app: wg-al
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wg-al
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: wg-al
    spec:
      initContainers:
#      containers:
        - name: wg-al
          image: 'mebaxyz/wireguard-init:latest'
          imagePullPolicy: Always
          volumeMounts:
          - mountPath: /lib/modules
            name: lib-modules
          - name: wg-al-volume
            mountPath: /etc/wireguard
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
      containers:
        - name: test
          image: 'alpine:latest'
          command: ["sh","-c","sleep infinity;"]
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: wg-al-volume
        configMap:
          name: wg-client
      - name: cassandra-rackdc
        configMap:
          name: cassandra-rackdc
      - name: shared
        emptyDir: {}

      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      nodeSelector:
        zone: alsace
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
